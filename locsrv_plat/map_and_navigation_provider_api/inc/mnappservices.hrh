/*
* Copyright (c) 2005-2006 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Map and Navigation Application Services
*
*/


#ifndef MN_APP_SERVICES_HRH
#define MN_APP_SERVICES_HRH

/** /file
 *  @brief Defines constants common for
 *  Map and Navigation FW .H and .RH files.
 *
 *  MapView application service features. Any combination of these can be defined in SERVICE_INFO
 *  for @ref KMnAppMapViewService.
 *  - @ref KMnSvcFeatureShowMap
 *  - @ref KMnSvcFeatureSelectFromMap
 *
 *  Navigation application service features. Any combination of these can be defined in SERVICE_INFO
 *  for @ref KMnAppNavigationService.
 *  - @ref KMnSvcFeatureNavigateTo
 *
 *  Geocoding application service features. Any combination of these can be defined in SERVICE_INFO
 *  for @ref KMnAppGeocodingService.
 *  - @ref KMnSvcFeatureCoordToAddr
 *  - @ref KMnSvcFeatureAddrToCoord
 *  - @ref KMnSvcFeaturePlainAddrToCoord
 *
 *  Map Image application service features. Any combination of these can be defined in SERVICE_INFO
 *  for @ref KMnAppMapImageService.
 *  - @ref KMnSvcFeatureVectorMap
 *  - @ref KMnSvcFeatureSatelliteImage
 */

// ---------------------------------------------------------------------------
//   MapView application service features. 
// ---------------------------------------------------------------------------
//

/** Displaying map with landmarks and current location.
 *  If specified, it means that Provider Application implements:
 *  - CMnMapViewServiceBase::HandleShowMapL()
 *  - CMnMapViewServiceBase::HandleShowCurrentLocationL()
 */
#define KMnSvcFeatureShowMap            0x01

/** Selecting location from map
 *  If specified, it means that Provider Application implements:
 *  - CMnMapViewServiceBase::HandleSelectFromMapL()
 */
#define KMnSvcFeatureSelectFromMap      0x02

// ---------------------------------------------------------------------------
//   Navigation application service features. 
// ---------------------------------------------------------------------------
//

/** Basic navigation.
 *  If specified, it means that Provider Application implements:
 *  - CMnNavigationServiceBase::HandleNavigateToL()
 */
#define KMnSvcFeatureNavigateTo         0x01

// ---------------------------------------------------------------------------
//   Geocoding application service features. 
// ---------------------------------------------------------------------------
//

/** Coordinate to Address conversion.
 *  If specified, it means that Provider Application implements:
 *  - CMnGeocodingServiceBase::HandleFindAddressByCoordinateL()
 */
#define KMnSvcFeatureCoordToAddr        0x01

/** Address to Coordinate conversion.
 *  If specified, it means that Provider Application implements:
 *  - CMnGeocodingServiceBase::HandleFindCoordinateByAddressL(const CPosLandmark&)
 */
#define KMnSvcFeatureAddrToCoord        0x02

/** Plain-string-address to Coordinate conversion.
 *  If specified, it means that Provider Application implements:
 *  - CMnGeocodingServiceBase::HandleFindCoordinateByAddressL(const TDesC&)
 */
#define KMnSvcFeaturePlainAddrToCoord   0x04

// ---------------------------------------------------------------------------
//   MapImage application service features. 
// ---------------------------------------------------------------------------
//

/** Rendering of scalable vector-based map.
 *  If specified, it means that Provider Application implements 
 *  CMnMapImageServiceBase::HandleRenderingL() and supports image type
 *  CMnMapImage::ETypeVectorMap
 */
#define KMnSvcFeatureVectorMap          0x01

/** Rendering of map image from satellite photos of Earth.
 *  If specified, it means that Provider Application implements 
 *  CMnMapImageServiceBase::HandleRenderingL() and supports image type
 *  CMnMapImage::ETypeSatelliteImage
 */
#define KMnSvcFeatureSatelliteImage     0x02

#endif // MN_APP_SERVICES_HRH


